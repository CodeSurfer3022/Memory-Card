{"version":3,"sources":["Components/Header.js","Components/Main.js","Components/Card.js","Components/Footer.js","App.js","index.js"],"names":["Header","props","className","score","topScore","Main","pokemonCards","Card","onClick","handleClick","pokemon","id","src","process","image","alt","name","Footer","App","useState","setScore","setTopscore","pokemons","pokemonsArray","setPokemonsArray","forEach","clicked","console","log","prevScore","array","randomIndex","tmp","lastIndex","length","Math","floor","random","shuffleArray","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAkBeA,MAhBf,SAAgBC,GACZ,OACI,gCACM,uCACE,uBAAGC,UAAU,QAAb,iFAIF,yBAAKA,UAAU,SACb,uCAAaD,EAAME,OACnB,2CAAiBF,EAAMG,aCAxBC,MAVf,SAAcJ,GACV,OACI,8BACE,yBAAKC,UAAU,WACZD,EAAMK,gBCSJC,MAbf,SAAcN,GACV,OACI,yBAAKC,UAAU,OAAOM,QAAS,kBAAMP,EAAMQ,YAAYR,EAAMS,QAAQC,MACjE,yBAAKT,UAAU,SACX,yBAAKU,IAAKC,eAAyBZ,EAAMS,QAAQI,MAAOC,IAAKd,EAAMS,QAAQM,QAE/E,yBAAKd,UAAU,QACX,2BAAID,EAAMS,QAAQM,SCCnBC,MARf,WACI,OACI,gCACE,oD,OC0EKC,MAvEf,WAAgB,IAAD,EACeC,mBAAS,GADxB,mBACJhB,EADI,KACGiB,EADH,OAEqBD,mBAAS,GAF9B,mBAEJf,EAFI,KAEMiB,EAFN,OAG+BF,mBAASG,GAHxC,mBAGJC,EAHI,KAGWC,EAHX,KA+BLf,EAAc,SAACE,GACjBY,EAAcE,SAAQ,SAAAf,GACfA,EAAQC,KAAOA,IACXD,EAAQgB,SAxBnBL,EAAYlB,EAAQC,EAAWD,EAAQC,GA4B3BgB,EAAS,GAGTG,EAAcE,SAAQ,SAAAf,GAAO,OAAIA,EAAQgB,SAAU,OAEnDhB,EAAQgB,SAAU,EAClBC,QAAQC,IAAR,mBAAwBzB,IAtCpCiB,GAAS,SAAAS,GAAS,OAAIA,EAAY,MAyC1BF,QAAQC,IAAIlB,OAIpBc,EAtCiB,SAAAM,GAKjB,IAHA,IACIC,EAAaC,EADbC,EAAYH,EAAMI,OAAS,EAGzBD,EAAY,GACdF,EAAcI,KAAKC,MAAMD,KAAKE,SAAWJ,GAEzCD,EAAOF,EAAMG,GACbH,EAAMG,GAAaH,EAAMC,GACzBD,EAAMC,GAAeC,EAErBC,IAGJ,OADAN,QAAQC,IAAIE,GACLA,EAuBUQ,CAAaf,KAG5BjB,EAAeiB,EAAcgB,KAAK,SAAA7B,GAAO,OAC3C,kBAAC,EAAD,CACI8B,IAAK9B,EAAQC,GACbD,QAASA,EACTD,YAAaA,OAIrB,OACI,yBAAKP,UAAU,OACX,kBAAC,EAAD,CAAQC,MAAOA,EAAOC,SAAUA,IAChC,kBAAC,EAAD,CAAME,aAAcA,IACpB,kBAAC,EAAD,QCtEZmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.46e1f1f4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n    return(\n        <header>\n              <h1>Pokemem</h1>\n                <p className=\"info\">\n                    Click each card only once, clicking the same card twice will\n                    reset score to 0\n                </p>\n              <div className=\"score\">\n                <p>Score is {props.score}</p>\n                <p>Top Score is {props.topScore}</p>\n              </div>\n        </header>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Main(props) {\n    return(\n        <main>\n          <div className=\"wrapper\">\n            {props.pokemonCards}\n          </div>\n        </main>\n    )\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction Card(props) {\n    return(\n        <div className=\"card\" onClick={() => props.handleClick(props.pokemon.id)}>\n            <div className=\"image\">\n                <img src={process.env.PUBLIC_URL + props.pokemon.image} alt={props.pokemon.name} />\n            </div>\n            <div className=\"name\">\n                <p>{props.pokemon.name}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction Footer() {\n    return(\n        <footer>\n          <p>Gotta catch em all!</p>\n        </footer>\n    )\n}\n\nexport default Footer;\n","import React, {useEffect, useState} from 'react';\nimport Header from \"./Components/Header\";\nimport Main from \"./Components/Main\";\nimport Card from \"./Components/Card\";\nimport Footer from \"./Components/Footer\";\n\nimport pokemons from './pokemons_1.json'\n\nfunction App() {\n    const [score, setScore] = useState(0);\n    const [topScore, setTopscore] = useState(0);\n    const [pokemonsArray, setPokemonsArray] = useState(pokemons);\n\n    const handleIncrement = () => {\n        setScore(prevScore => prevScore + 1);\n    }\n\n    const updateTopscore = () => {\n        setTopscore(score > topScore ? score : topScore);\n    }\n\n    const shuffleArray = array => {\n        // assign array items from last to first\n        let lastIndex = array.length - 1;\n        let randomIndex, tmp;\n\n        while(lastIndex > 0) {\n            randomIndex = Math.floor(Math.random() * lastIndex);\n\n            tmp  = array[lastIndex];\n            array[lastIndex] = array[randomIndex];\n            array[randomIndex] = tmp;\n\n            lastIndex --;\n        }\n        console.log(array);\n        return array;\n    }\n\n    const handleClick = (id) => {\n        pokemonsArray.forEach(pokemon => {\n            if(pokemon.id === id) {\n                if(pokemon.clicked) {\n                    // if the card was already clicked, you lose!\n                    // update top score and reset score\n                    updateTopscore();\n                    setScore(0);\n\n                    // set clicked to false in all cards for new game\n                    pokemonsArray.forEach(pokemon => pokemon.clicked = false);\n                } else {\n                    pokemon.clicked = true;\n                    console.log(`score is ${score}`);\n                    handleIncrement();\n                }\n                console.log(pokemon);\n            }\n        });\n        // shuffle array on each click\n        setPokemonsArray(shuffleArray(pokemonsArray));\n    }\n\n    const pokemonCards = pokemonsArray.map( pokemon =>\n        <Card\n            key={pokemon.id}\n            pokemon={pokemon}\n            handleClick={handleClick}\n        />\n    );\n\n    return (\n        <div className=\"App\">\n            <Header score={score} topScore={topScore}/>\n            <Main pokemonCards={pokemonCards}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}